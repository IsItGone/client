name: Build and Push Package (Prod)

on:
  release:
    types: [published]

  push: # TODO: delete
    branches:
      - ci

env:
  ENVIRONMENT: prod
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  IMAGE_REPOSITORY: ${{ vars.REGISTRY }}/${{ vars.ORGANIZATION }}/${{ github.event.repository.name }}
  APP_VERSION: ${{ github.event.release.tag_name }}
  HOST: ${{ vars.HOST }}

jobs:
  build-and-deploy:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
#        with: # TODO: uncomment
#          ref: refs/tags/${{ env.APP_VERSION }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"

      # Build
      - name: Install dependencies
        run: flutter pub get

      - name: Generate GraphQL Schema & Models
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build Flutter Web
        run: flutter build web --release --dart-define=NAVER_MAP_CLIENT_ID=${{ secrets.NAVER_MAP_CLIENT_ID }} --dart-define=API_URL=https://${{ vars.HOST }}/api/graphql --base-href /

      # Deploy
      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Who am I? with args # TODO: delete
        run: vercel whoami --token ${{ secrets.VERCEL_TOKEN }}

      - name: Who am I? with env # TODO: delete
        run: vercel whoami
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel build/web --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
